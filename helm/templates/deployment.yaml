apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: demo-app
    namespace: argocd
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: demo-app
  template:
    metadata:
      labels:
        app: demo-app
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      imagePullSecrets:
      - name: regcred
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
          protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: "512Mi"
          requests:
            cpu: "500m"
            memory: "256Mi"
        livenessProbe:
          httpGet:
            #path: /actuator/health/liveness
            path: /hello
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            #path: /actuator/health/readiness
            path: /hello
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          failureThreshold: 3
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "prod"
        - name: JAVA_OPTS
          value: "-Xmx{{ .Values.javaOpts.heapSize.max }} -Xms{{ .Values.javaOpts.heapSize.min }} -XX:+UseG1GC -XX:+HeapDumpOnOutOfMemoryError"
        - name: SERVER_PORT
          value: "8081"
        - name: SPRING_CONFIG_MAP
          value: "demo-config"
        volumeMounts:
        - name: config-volume
          mountPath: /resources/application.yaml
          subPath: application.yaml
      volumes:
      - name: config-volume
        configMap:
          name: demo-config
